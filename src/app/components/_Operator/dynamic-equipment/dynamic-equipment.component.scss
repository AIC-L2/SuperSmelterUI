.recipe-container {
  padding: 3px;
  background-color: #f8f9fa;
  min-height: 95vh;
}

.dynamicEquipments {
  width: 100%;
  max-width: 100vw;
  overflow: visible;
}

.table-section {
  background-color: white;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  overflow: hidden;
}

.table-caption {
  display: flex;
  justify-content: space-between;
  align-items: center;
  // padding: 4px 20px;
  background-color: #f8f9fa;
  // border-bottom: 1px solid #dee2e6;
}

.title {
  margin: 0;
  color: #333;
  font-size: 20px;
  font-weight: 600;
}

.control-buttons {
  display: flex;
  gap: 8px;
  align-items: center;
}

.button-group {
  display: flex;
  gap: 3px;
}

.action-buttons {
  display: flex;
  gap: 3px;
  margin-left: 8px;
}

// Header content layout
.header-content {
  display: flex;
  // justify-content: space-between;
  align-items: center;
  width: 100%;
  
  &.text-center {
    justify-content: center;
  }
}

.header-text {
  font-weight: 600;
  color: #495057;
  
  &.text-center {
    text-align: center;
    width: 100%;
  }
}

.header-icons {
  display: flex;
  align-items: center;
  gap: 5px;
}

// PrimeNG Table Customization
::ng-deep .p-datatable {
  table-layout: fixed;
  width: 100%;
  max-width: 100%;
  overflow: visible;
  
  .p-datatable-wrapper {
    overflow: visible !important;
  }
  
  .p-datatable-table {
    overflow: visible !important;
  }
  
  .p-datatable-header {
    background-color: #f8f9fa;
    border-bottom: 1px solid #dee2e6;
  }

  .p-datatable-thead > tr > th {
    background-color: #bdd5ed;
    border-bottom: 2px solid #dee2e6;
    font-weight: 600;
    color: #495057;
    padding: 6px 4px;
    font-size: 12px;
    width: calc(100% / 26); // Equal width for all 26 columns
    min-width: 60px; // Reduced minimum width to fit more columns
    max-width: none;
    // overflow: hidden;
    // text-overflow: ellipsis;
    // white-space: nowrap;
  }

  .p-datatable-tbody > tr {
    transition: background-color 0.2s;
    
    &:hover {
      background-color: #e3f2fd !important;
    }
    
    &.p-highlight {
      background-color: #bbdefb !important;
    }
  }


  .p-datatable-tbody > tr > td {
    padding: 4px 1px !important;
    border-bottom: 1px solid #dee2e6;
    font-size: 12px;
    width: calc(100% / 26); // Equal width for all 26 columns
    min-width: 60px; // Reduced minimum width to fit more columns
    max-width: none;
    // overflow: hidden;
    // text-overflow: ellipsis;
    // white-space: nowrap;
    
    // Center checkboxes with smaller size
    input[type="checkbox"] {
      display: block;
      margin: 0 auto;
      transform: scale(0.9); // Reduced checkbox size
    }
    
    // Center checkbox icons and content
    .pi.check-icon,
    .pi.uncheck-icon {
      display: block;
      margin: 0 auto;
      text-align: center;
    }
    
    // Center all content in cells that contain checkboxes
    div:has(input[type="checkbox"]),
    div:has(.pi.check-icon),
    div:has(.pi.uncheck-icon) {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 100%;
    }
  }
  
  // Center content for cells with checkboxes
  .checkbox-cell {
    text-align: center;
    // display: flex;
    // align-items: center;
    // justify-content: center;
  }

  .p-sortable-column {
    cursor: pointer;
    
    &:hover {
      background-color: #e9ecef;
    }
  }

  .p-sortable-column-icon {
    color: #6c757d;
  }
  
  // Explicit striped rows styling
  .p-datatable-tbody > tr:nth-child(even) {
    background-color: #f8f9fa;
  }
  
  .p-datatable-tbody > tr:nth-child(odd) {
    background-color: #ffffff;
  }
  
  // Ensure striped rows work with hover effects
  .p-datatable-tbody > tr:nth-child(even):hover {
    background-color: #e3f2fd !important;
  }
  
  .p-datatable-tbody > tr:nth-child(odd):hover {
    background-color: #e3f2fd !important;
  }
}

// Status indicators
.active-status {
  color: #28a745;
  font-weight: bold;
  font-size: 16px;
}

.inactive-status {
  color: #6c757d;
  font-size: 16px;
}

// Button styling
 :host ::ng-deep .p-button {
  &.p-button-sm {
    padding: 0.375rem 0.5rem;
    font-size: 0.75rem;
    min-height: 28px;
  }
  
  // &.p-button-secondary {
  //   background-color: #007faf;
  //   border-color: #6c757d;
  //   color: white;
    
  //   &:hover {
  //     background-color: #0178a3;
  //     border-color: #545b62;
  //     color: white;
  //   }
  // }
  
  &.p-button-success {
    background-color: #28a745;
    border-color: #28a745;
    
    &:hover {
      background-color: #218838;
      border-color: #1e7e34;
    }
  }
  
  &.p-button-info {
    background-color: #17a2b8;
    border-color: #17a2b8;
    
    &:hover {
      background-color: #138496;
      border-color: #117a8b;
    }
  }
  
  &.p-button-danger {
    background-color: #dc3545;
    border-color: #dc3545;
    
    &:hover {
      background-color: #c82333;
      border-color: #bd2130;
    }
  }
}

.lb-color{
  border-left: 1px solid #a6b7cd !important;
}

.rb-color{
  border-right: 1px solid #a6b7cd!important;
}

// Search input styling (scoped to this component only)
:host ::ng-deep .dynamicEquipments .p-inputtext {
  border: 1px solid #ced4da;
  border-radius: 4px;
  padding: 2px !important; //0.375rem 0.75rem;
  width: 60px;
  height: 18px;
  font-size: 12px !important;
  
  &:focus {
    border-color: #80bdff;
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
  }
}

// Paginator styling
::ng-deep .p-paginator {
  background-color: #f8f9fa;
  border-top: 1px solid #dee2e6;
  
  .p-paginator-pages .p-paginator-page {
    &.p-highlight {
      background-color: #007bff;
      border-color: #007bff;
    }
  }
}

// Responsive design
@media (max-width: 768px) {
  .table-caption {
    flex-direction: column;
    gap: 10px;
    align-items: flex-start;
  }
  
  .control-buttons {
    flex-wrap: wrap;
    gap: 6px;
  }
  
  .button-group {
    gap: 2px;
  }
  
  .action-buttons {
    margin-left: 0;
  }
}

// Additional styling for dynamic-equipment specific elements
.check-icon{
  background-image: url("../../../../../public/Icons/app/check.svg");
  background-size: 18px 18px;
  width: 20px;
  height: 16px;
  background-repeat: no-repeat;
  margin-top: 1px;
  content: "";
  background-position: center;
}

.uncheck-icon {
  background-image: url("../../../../../public/Icons/app/uncheck.svg");
  background-size: 18px 18px;
  width: 20px;
  height: 16px;
  background-repeat: no-repeat;
  margin-top: 1px;
  content: "";
  background-position: center;
}

// Compact PrimeNG Select for GearboxSel
:host ::ng-deep .deqp-select-input .p-select {
  height: 20px;
}

:host ::ng-deep .deqp-select-input .p-select-label {
  padding: 0 6px;
  line-height: 18px;
  font-size: 12px;
}

:host ::ng-deep .deqp-select-panel.p-select-panel,
:host ::ng-deep .deqp-select-panel {
  padding: 2px 0;
}

:host ::ng-deep .deqp-select-panel .p-select-items .p-select-option {
  padding: 2px 8px;
  font-size: 12px;
  min-height: 20px;
}

.colchk_Width {
  width: 60px;
}

.p-checkbox{
  width: 16px;
  height: 16px;
  display: block;
  margin: 0 auto;
}

// Additional centering for PrimeNG checkbox components
::ng-deep .p-checkbox {
  display: flex;
  justify-content: center;
  align-items: center;
  
  .p-checkbox-box {
    margin: 0 auto;
  }
}

// Group label cell styling for row-wise grouping
// .group-label-cell {
//   font-weight: 700 !important;
//   text-align: center !important;
//   vertical-align: middle !important;
//   font-size: 12px !important;
//   letter-spacing: 0.5px;
//   min-width: 60px !important;
//   width: 10% !important;
//   writing-mode: horizontal-tb;
//   text-orientation: mixed;
// }

// Enhanced styling for grouped parameters with row-wise layout
::ng-deep .p-datatable {
  .group-label-cell {
    font-weight: 700 !important;
    text-align: center !important;
    vertical-align: middle !important;
    font-size: 12px !important;
    letter-spacing: 0.5px;
    min-width: 50px !important;
    width: 3% !important;
  }
  
  // Style for parameter name column in transposed table
  .p-datatable-tbody > tr > td:nth-child(1) {
    // width: 30%;
    min-width: 112px;
  }
  
  // Add top border to entire rows where a group starts to distinguish groups
  .p-datatable-tbody > tr:has(.group-label-cell) {
    border-top: 2px solid #a6b7cd !important;
  }
  
  // Alternative approach - target the group label cell directly
  .group-label-cell {
    border-top: 2px solid #a6b7cd !important;
  }
  
  // Ensure all cells in the row with group label have the same top border
  .p-datatable-tbody > tr:has(.group-label-cell) > td {
    border-top: 2px solid #a6b7cd !important;
  }
}